/// <reference types="node" />
import { ApolloServerBase, GraphQLOptions } from 'apollo-server-core';
import { ServerResponse } from 'http';
import { MicroRequest } from './types';
export interface ServerRegistration {
    path?: string;
    disableHealthCheck?: boolean;
    onHealthCheck?: (req: MicroRequest) => Promise<any>;
    __testing__microSuppressErrorLog?: boolean;
}
export declare class ApolloServer extends ApolloServerBase {
    createGraphQLServerOptions(req: MicroRequest, res: ServerResponse): Promise<GraphQLOptions>;
    createHandler({ path, disableHealthCheck, onHealthCheck, __testing__microSuppressErrorLog, }?: ServerRegistration): (req: MicroRequest, res: ServerResponse) => Promise<void>;
    private handleHealthCheck;
    private handleGraphqlRequestsWithLandingPage;
    private handleGraphqlRequestsWithServer;
}
//# sourceMappingURL=ApolloServer.d.ts.map